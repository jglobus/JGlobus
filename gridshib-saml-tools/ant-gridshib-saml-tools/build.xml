<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="GridShib_SAML_Tools_for_Developers" default="create-dist" basedir=".">

  <description>GridShib SAML Tools buildfile for developers.
  This build file is not distributed. (trscavo 2007-07-29)</description>

  <!-- load environment variables -->
  <!--<property environment="env"/>-->

  <!-- load build.properties files -->
  <property file="${user.home}/build.properties"/>
  <property file="build.properties"/>
    
  <!-- existing directories -->
  <property name="gridshib.dist" value="dist"/>

  <!-- install directory -->
  <property name="gridshib.install" value="install"/>
  
  <!--<property name="gridshib.common" value="common/java"/> unused -->

  <!-- GridShib SAML Tools distribution files -->
  <property name="gridshib.zipfile" 
            value="${gridshib.dist}/${package.name}-src.zip"/>
  <property name="gridshib.gzipfile" 
            value="${gridshib.dist}/${package.name}-src.tar.gz"/>
  <property name="gridshib.tmp.tarfile" 
            value="${gridshib.dist}/${base.package.name}.tar"/>
  <property name="ca-basename" value="meaningless-ca"/>
  <property name="gridshib.ca.zipfile" 
            value="${gridshib.dist}/${ca-basename}.zip"/>
  <property name="gridshib.ca.gzipfile" 
            value="${gridshib.dist}/${ca-basename}.tar.gz"/>

  <target name="compile" depends="get-local-copy"
      description="Compile the GridShib SAML Tools">
      <ant dir="${gridshib.install}" target="compile-tests"/>
  </target>

  <property name="include.bootstrap.properties" value="true"/>
  
  <target name="create-jars" depends="get-local-copy"
      description="Create the GridShib SAML Tools JAR files">
      <ant dir="${gridshib.install}" target="create-jars">
        <property name="include.boot.properties" 
          value="${include.bootstrap.properties}"/>
      </ant>
  </target>

  <target name="install" depends="get-local-copy"
      description="Install the GridShib SAML Tools">
      <ant dir="${gridshib.install}" target="install">
        <property name="include.boot.properties" 
          value="${include.bootstrap.properties}"/>
      </ant>
  </target>

  <target name="run" depends="get-local-copy"
      description="Run the SAML Assertion Issuer Tool">
      <ant dir="${gridshib.install}" target="run"/>
  </target>

  <target name="run-saml-issuer" depends="get-local-copy"
      description="Run the SAML Assertion Issuer Tool">
      <ant dir="${gridshib.install}" target="run">
        <property name="classname" 
          value="org.globus.gridshib.tool.saml.SAMLAssertionIssuerTool"/>
      </ant>
  </target>

  <target name="run-saml-info" depends="get-local-copy"
      description="Run the SAML Info Tool">
      <ant dir="${gridshib.install}" target="run">
        <property name="classname" 
          value="org.globus.gridshib.tool.saml.SAMLSecurityInfoTool"/>
      </ant>
  </target>

  <target name="run-proxy-bind" depends="get-local-copy"
      description="Run the X.509 Binding Tool">
      <ant dir="${gridshib.install}" target="run">
        <property name="classname" 
          value="org.globus.gridshib.tool.x509.X509BindingTool"/>
      </ant>
  </target>

  <target name="run-tests" depends="get-local-copy"
      description="Run the unit tests">
      <ant dir="${gridshib.install}" target="run-tests"/>
  </target>

  <target name="create-docs" depends="get-local-copy"
    description="Create Java API documentation">
      <ant dir="${gridshib.install}" target="create-docs"/>
  </target>
      
  <target name="create-dist" 
    depends="clean, create-zip, create-gzip" 
    description="Create a GS-ST distribution (zip and gzip)"/>
    
  <target name="create-zip" depends="init-dist, get-local-copy"
    description="Create a GS-ST distribution (zip)">
    <zip destfile="${gridshib.zipfile}">
      <zipfileset dir="${gridshib.install}" prefix="${package.name}">
        <patternset refid="dist.fileset"/>
      </zipfileset>
    </zip>
  </target>
  
  <target name="create-gzip" depends="init-dist, get-local-copy"
    description="Create a GS-ST distribution (gzip)">
    <tar destfile="${gridshib.tmp.tarfile}">
      <tarfileset dir="${gridshib.install}" prefix="${package.name}">
        <patternset refid="dist.fileset"/>
      </tarfileset>
    </tar>
    <gzip src="${gridshib.tmp.tarfile}" destfile="${gridshib.gzipfile}"/>
    <delete file="${gridshib.tmp.tarfile}"/>
  </target>
  
  <target name="init-dist">
    <patternset id="dist.fileset">
      <include name="${gridshib.bin}/**"/>
      <include name="${gridshib.demo}/**"/>
      <include name="${gridshib.doc}/**"/>
      <include name="${gridshib.endorsed}/**"/>
      <include name="${gridshib.etc}/**"/>
      <include name="${gridshib.lib}/**"/>
      <include name="${gridshib.src}/**"/>
      <include name="${gridshib.templates}/**"/>
      <include name="${gridshib.tests}/**"/>
      <include name="build.*"/>
      <include name="${globus.saml}/**"/>
    </patternset>
  </target>
  
  <target name="create-dist-ca" 
    depends="clean, create-zip-ca, create-gzip-ca" 
    description="Create a distribution (zip and gzip) of the meaningless CA"/>
    
  <target name="create-zip-ca" depends="init-dist-ca, get-local-copy"
    description="Create a distribution (zip) of the meaningless CA">
    <zip destfile="${gridshib.ca.zipfile}">
      <zipfileset dir="${gridshib.install}/${gridshib.etc}" filemode="600">
        <patternset refid="dist.fileset.ca.keys"/>
      </zipfileset>
      <zipfileset dir="${gridshib.install}/${gridshib.etc}">
        <patternset refid="dist.fileset.ca.nonkeys"/>
      </zipfileset>
    </zip>
  </target>
  
  <target name="create-gzip-ca" depends="init-dist-ca, get-local-copy"
    description="Create a distribution (gzip) of the meaningless CA">
    <tar destfile="${gridshib.tmp.tarfile}">
      <tarfileset dir="${gridshib.install}/${gridshib.etc}" mode="600">
        <patternset refid="dist.fileset.ca.keys"/>
      </tarfileset>
      <tarfileset dir="${gridshib.install}/${gridshib.etc}">
        <patternset refid="dist.fileset.ca.nonkeys"/>
      </tarfileset>
    </tar>
    <gzip src="${gridshib.tmp.tarfile}" destfile="${gridshib.ca.gzipfile}"/>
    <delete file="${gridshib.tmp.tarfile}"/>
  </target>
  
  <target name="init-dist-ca">
    <patternset id="dist.fileset.ca.keys">
      <include name="meaningless-ca/*key.pem"/>
    </patternset>
    <patternset id="dist.fileset.ca.nonkeys">
      <include name="meaningless-ca/*"/>
      <exclude name="meaningless-ca/*key.pem"/>
    </patternset>
  </target>
  
  <!-- prepare to create distribution -->
  <target name="get-local-copy" depends="create-build-props"
    description="Make the distribution directory and preprocess the files">
    <!--<mkdir dir="${gridshib.build}"/>-->
    <!-- assemble gridshib saml tools -->
    <copy todir="${gridshib.install}/${gridshib.bin}"
          preservelastmodified="true">
      <fileset dir="client/java/bin"/>
      <fileset dir="common/java/bin"/>
      <fileset dir="teragrid/java/bin"/>
      <fileset dir="tool/java/bin"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.demo}"
          preservelastmodified="true">
      <fileset dir="tool/php/demo"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.doc}"
          preservelastmodified="true">
      <fileset dir="doc">
        <exclude name="client/*.html"/>
      </fileset>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.endorsed}"
          preservelastmodified="true">
      <fileset dir="common/java/endorsed"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.etc}"
          preservelastmodified="true" includeEmptyDirs="false">
      <!--<fileset dir="common/java/etc"/>-->
      <fileset dir="teragrid/java/etc"/>
      <fileset dir="tool/java/etc"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.lib}"
          preservelastmodified="true">
      <fileset dir="common/java/lib"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.src}"
          preservelastmodified="true">
      <fileset dir="client/java/src"/>
      <fileset dir="common/java/src"/>
      <fileset dir="teragrid/java/src"/>
      <fileset dir="tool/java/src">
        <!--<exclude name="conf/*"/>-->
      </fileset>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.endorsed}"
          preservelastmodified="true">
      <fileset dir="common/java/endorsed"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.templates}"
          preservelastmodified="true">
      <fileset dir="common/java/templates"/>
      <fileset dir="teragrid/java/templates"/>
    </copy>
    <copy todir="${gridshib.install}/${gridshib.tests}"
          preservelastmodified="true">
      <fileset dir="common/java/tests"/>
      <fileset dir="teragrid/java/tests"/>
      <fileset dir="tool/java/tests"/>
    </copy>
    <copy todir="${gridshib.install}" preservelastmodified="true">
      <fileset dir="common/java">
        <include name="build.*"/>
      </fileset>
    </copy>
    <!-- copy Globus SAML Library source -->
    <copy todir="${gridshib.install}/${globus.saml}"
          preservelastmodified="true">
      <fileset dir="${globus.saml}"/>
    </copy>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.bin}" 
             excludes="*.bat" eol="lf" eof="remove"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.bin}" 
             includes="*.bat" eol="crlf"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.doc}" 
             includes="**/*"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.etc}" 
             includes="**/*.properties"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.src}" 
             includes="**/*.java"
             tab="remove" tablength="4" eol="lf" javafiles="yes"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.templates}" 
             includes="**/*.properties"/>
    <fixcrlf srcdir="${gridshib.install}/${gridshib.tests}" 
             includes="**/*.java"
             tab="remove" tablength="4" eol="lf" javafiles="yes"/>
  </target>
  
  <target name="create-build-props">
    <mkdir dir="${gridshib.install}"/>
    <propertyfile file="${gridshib.install}/build.properties">
      <entry key="package.name" 
             value="${package.name}"/>
      <entry key="version.number" 
             value="${version.number}"/>
      <entry key="create.docs" 
             value="${create.docs}"/>
      <entry key="run.tests" 
             value="${run.tests}"/>
      <entry key="run.globus.saml.tests" 
             value="${run.globus.saml.tests}"/>
      <entry key="globus.saml.name" 
             value="${globus.saml.name}"/>
      <entry key="globus.saml.java" 
             value="${globus.saml.java}"/>
      <entry key="gridshib.bin" 
             value="${gridshib.bin}"/>
      <entry key="gridshib.demo" 
             value="${gridshib.demo}"/>
      <entry key="gridshib.doc" 
             value="${gridshib.doc}"/>
      <entry key="gridshib.endorsed" 
             value="${gridshib.endorsed}"/>
      <entry key="gridshib.etc" 
             value="${gridshib.etc}"/>
      <entry key="gridshib.lib" 
             value="${gridshib.lib}"/>
      <entry key="gridshib.logs" 
             value="${gridshib.logs}"/>
      <entry key="gridshib.src" 
             value="${gridshib.src}"/>
      <entry key="gridshib.templates" 
             value="${gridshib.templates}"/>
      <entry key="gridshib.tests" 
             value="${gridshib.tests}"/>
      <entry key="gridshib.logConfigPath" 
             value="${gridshib.logConfigPath}"/>
      <entry key="gridshib.SAMLToolsConfigPath" 
             value="${gridshib.SAMLToolsConfigPath}"/>
      <entry key="gridshib.dbConfigPath" 
             value="${gridshib.dbConfigPath}"/>
      <entry key="gridshib.cogConfigPath" 
             value="${gridshib.cogConfigPath}"/>
      <entry key="gridshib.certPath" 
             value="${gridshib.certPath}"/>
      <entry key="gridshib.keyPath" 
             value="${gridshib.keyPath}"/>
      <entry key="gridshib.identityAttributesPath" 
             value="${gridshib.identityAttributesPath}"/>
      <entry key="gridshib.keyStorePath" 
             value="${gridshib.keyStorePath}"/>
      <entry key="gridshib.keyStorePassword" 
             value="${gridshib.keyStorePassword}"/>
      <entry key="gridshib.keyStoreKeyAlias" 
             value="${gridshib.keyStoreKeyAlias}"/>
      <entry key="gridshib.keyStoreKeyPassword" 
             value="${gridshib.keyStoreKeyPassword}"/>
    </propertyfile>
    <condition property="SecurityContextImpl.exists">
      <isset property="gridshib.SecurityContextImpl"/>
    </condition>
    <antcall target="update-SecurityContextImpl"/>
  </target>

  <target name="update-SecurityContextImpl" if="SecurityContextImpl.exists">
    <propertyfile file="${gridshib.install}/build.properties">
      <entry key="gridshib.SecurityContextImpl" 
             value="${gridshib.SecurityContextImpl}"/>
    </propertyfile>
  </target>

  <!-- cleanup tasks -->
  <target name="clean" depends="clean-globus-saml"
    description="Clean all working directories">
    <delete dir="${gridshib.install}"/>
  </target>
  <target name="clean-globus-saml" 
    description="Clean Globus SAML library">
    <ant dir="${globus.saml.java}" target="clean-all"/>
  </target>
    
</project>
