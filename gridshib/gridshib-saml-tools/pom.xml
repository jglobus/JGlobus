<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.jglobus</groupId>
		<artifactId>gridshib</artifactId>
		<version>2.1-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>gridshib-saml-tools</artifactId>
	<name>gridshib-saml-tools</name>

<properties>
    <gridshib.home>${basedir}/testconfig</gridshib.home>
    <db.path>${gridshib.home}/var/gram/gt4audit</db.path>
    <db.schema.file>${gridshib.home}/gram_audit_v1_schema_derby.sql.in</db.schema.file>
    <db.load.file>${gridshib.home}/gram_audit_table_init.sql.in</db.load.file>
    <db.alter.file>${gridshib.home}/gram_audit_alter_table.sql.in</db.alter.file>
    <db.username>globus</db.username>
    <db.password>GrAmAuDiT</db.password>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <db.datetime>${maven.build.timestamp}</db.datetime>
</properties>

<repositories>
<repository>
    <id>repo</id>
    <url>file://${project.basedir}/repo</url>
</repository>
<repository>
        <id>thirdparty-releases</id>
        <name>JBoss Thirdparty Releases</name>
        <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
</repository>
</repositories>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ssl-proxies</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>gss</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>gridshib-common</artifactId>
		</dependency>

<!-- NOTE: THESE ARE INCLUDED IN gridshib-common, hence commented out
<dependency>
	<groupId>org.globus.opensaml11</groupId>
	<artifactId>saml</artifactId>
</dependency>
<dependency>
    <groupId>commons-cli</groupId>
    <artifactId>commons-cli</artifactId>
</dependency> -->

<dependency>
  <groupId>commons-dbcp</groupId>
  <artifactId>commons-dbcp</artifactId>
</dependency>
<dependency>
    <groupId>org.apache.derby</groupId>
    <artifactId>derby</artifactId>
</dependency>
<dependency>
    <groupId>org.apache.derby</groupId>
    <artifactId>derbytools</artifactId>
</dependency>
<dependency>
    <groupId>org.apache.directory.studio</groupId>
    <artifactId>org.apache.commons.collections</artifactId>
</dependency>
<dependency>
  <groupId>commons-pool</groupId>
  <artifactId>commons-pool</artifactId>
</dependency>
<dependency>
  <groupId>edu.internet2.middleware</groupId>
  <artifactId>shibboleth</artifactId>
</dependency>
<dependency>
   <groupId>net.sf</groupId>
        <artifactId>jargs</artifactId>
</dependency>
<dependency>
    <groupId>org.opensaml</groupId>
    <artifactId>opensaml1</artifactId>
</dependency>
<dependency>
  <groupId>xml-security</groupId>
  <artifactId>xmlsec</artifactId>
</dependency>
<dependency>
  <groupId>javax.servlet</groupId>
  <artifactId>servlet-api</artifactId>
</dependency>
<dependency>
<groupId>xalan</groupId>
<artifactId>xalan</artifactId>
</dependency>
<dependency>
<groupId>xerces</groupId>
<artifactId>xercesImpl</artifactId>
</dependency>
<dependency>
<groupId>xml-apis</groupId>
<artifactId>xml-apis</artifactId>
</dependency>
	</dependencies>
<build>
        <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>org.globus.opensaml11:saml</include>
                  <include>edu.internet2.middleware:shibboleth</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>testconfig</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${gridshib.home}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/config</directory>
                  <filtering>true</filtering>
                  <excludes>
                    <exclude>**/*.pem</exclude>
                    <exclude>**/*.jks</exclude>
                    <exclude>**/meaningless-ca</exclude>
                    <exclude>**/gridshib-ca</exclude>
                    <exclude>**/templates</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>${basedir}/config</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>**/*.pem</include>
                    <include>**/*.jks</include>
                    <include>**/meaningless-ca</include>
                    <include>**/gridshib-ca</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${basedir}/config/templates</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>gram_audit_v1_schema_derby.sql.in</include>
                    <include>gram_audit_table_init.sql.in</include>
                    <include>gram_audit_alter_table.sql.in</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>testconfig2</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${gridshib.home}/lib</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/lib</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${basedir}/target/</directory>
                  <includes>
                    <include>${project.artifactId}-${project.version}.jar</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
<plugin> <!-- tests need to be run one by one in fresh forks -->
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.16</version>
    <configuration>
        <forkCount>1</forkCount>
        <reuseForks>false</reuseForks>
<systemPropertyVariables>
<gridshib.home>${gridshib.home}/</gridshib.home>
<org.globus.gridshib.config>${gridshib.home}/gridshib-bootstrap.properties</org.globus.gridshib.config>
</systemPropertyVariables>
    </configuration>
  </plugin>
<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>exec-maven-plugin</artifactId>
    <configuration>
<systemPropertyVariables>
<org.globus.gridshib.config>${gridshib.home}/gridshib-bootstrap.properties</org.globus.gridshib.config>
</systemPropertyVariables>
    </configuration>
    <executions>
        <execution>
            <id>clear-db</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
                <executable>rm</executable>
                <arguments>
                    <argument>-fr</argument>
                    <argument>${db.path}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>create-db</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>process-test-resources</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path};create=true</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.schema.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>pre-test-cli</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
                <executable>chmod</executable>
                <arguments>
                    <argument>-R</argument>
                    <argument>755</argument>
                    <argument>${gridshib.home}/bin/</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>testcli1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>testcli2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-K</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>testcli3</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-V</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>testcli4</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-V</argument>
                    <argument>-o</argument>
                    <argument>testassertion.xml</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>testcli5</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-proxy-bind</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-f</argument>
                    <argument>testassertion.xml</argument>
                    <argument>-S</argument>
                    <argument>-O</argument>
                    <argument>1.3.6.1.4.1.3536.1.1.1.12</argument>
                    <argument>-o</argument>
                    <argument>testproxy.pem</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>testcli6</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-V</argument>
                    <argument>-A</argument>
                    <argument>-o</argument>
                    <argument>testextension.der</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>testcli7</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-proxy-bind</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-f</argument>
                    <argument>testassertion.xml</argument>
                    <argument>-A</argument>
                    <argument>-O</argument>
                    <argument>1.3.6.1.4.1.3536.1.1.1.12</argument>
                    <argument>-o</argument>
                    <argument>testproxy2.pem</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>testcli8</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-V</argument>
                    <argument>-a</argument>
                    <argument>-I</argument>
                    <argument>${maven.build.timestamp}</argument>
                    <argument>-D</argument>
                    <argument>dateTime.pattern=${maven.build.timestamp.format}</argument>
                    <argument>-X</argument>
                    <argument>-o</argument>
                    <argument>testproxy3.pem</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>testcli9</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/gridshib-saml-issuer</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-u</argument>
                    <argument>trscavo</argument>
                    <argument>-V</argument>
                    <argument>-a</argument>
                    <argument>-M</argument>
                    <argument>urn:oasis:names:tc:SAML:1.0:am:password</argument>
                    <argument>-I</argument>
                    <argument>${maven.build.timestamp}</argument>
                    <argument>-D</argument>
                    <argument>dateTime.pattern=${maven.build.timestamp.format}</argument>
                    <argument>-i</argument>
                    <argument>255.255.255.255</argument>
                    <argument>-D</argument>
                    <argument>Attribute.mail.Name=urn:oid:0.9.2342.19200300.100.1.3</argument>
                    <argument>-D</argument>
                    <argument>Attribute.mail.Value=trscavo@gmail.com</argument>
                    <argument>-X</argument>
                    <argument>-o</argument>
                    <argument>testgatewayproxy.pem</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>prep-test-gram-audit-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>rm</executable>
                <arguments>
                    <argument>-fr</argument>
                    <argument>${db.path}</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>prep-test-gram-audit-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path};create=true</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.schema.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>prep-test-gram-audit-3</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path}</argument>
                    <argument>-Dij.user=${db.username}</argument>
                    <argument>-Dij.password=${db.password}</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.load.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>test-gram-audit-std1-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>sh</executable>
                <arguments>
                    <argument>${basedir}/misc/testhelper2.sh</argument>
                    <argument>${gridshib.home}/bin/test-gram-audit -d -q</argument>
                    <argument>infile1.txt</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-std1-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/resolve-gram-attributes</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-t</argument>
                    <argument>0</argument>
                    <argument>-f</argument>
                    <argument>infile1.txt</argument>
                </arguments>
                <outputFile>outfile1.txt</outputFile>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-std-2-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>sh</executable>
                <arguments>
                    <argument>${basedir}/misc/testhelper2.sh</argument>
                    <argument>${gridshib.home}/bin/test-gram-audit -d -q -Z</argument>
                    <argument>infile2.txt</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-std-2-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/resolve-gram-attributes</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-t</argument>
                    <argument>0</argument>
                    <argument>-f</argument>
                    <argument>infile2.txt</argument>
                    <argument>-Z</argument>
                    <argument>-o</argument>
                    <argument>outfile2.txt</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>prep-test-gram-audit-ext-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>rm</executable>
                <arguments>
                    <argument>-fr</argument>
                    <argument>${db.path}</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>prep-test-gram-audit-ext-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path};create=true</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.schema.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>prep-test-gram-audit-ext-3</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path}</argument>
                    <argument>-Dij.user=${db.username}</argument>
                    <argument>-Dij.password=${db.password}</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.load.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>prep-test-gram-audit-ext-4</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Dderby.system.home=${gridshib.home}</argument>
                    <argument>-Dderby.infolog.append=true</argument>
                    <argument>-Dij.protocol=jdbc:derby:directory:</argument>
                    <argument>-Dij.database=${db.path}</argument>
                    <argument>-Dij.user=${db.username}</argument>
                    <argument>-Dij.password=${db.password}</argument>
                    <argument>-cp</argument>
                    <classpath/>
                    <argument>org.apache.derby.tools.ij</argument>
                    <argument>${db.alter.file}</argument>
                </arguments>
            </configuration>
        </execution>
        <execution>
            <id>test-gram-audit-ext-3-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>sh</executable>
                <arguments>
                    <argument>${basedir}/misc/testhelper2.sh</argument>
                    <argument>${gridshib.home}/bin/test-gram-audit -d -q</argument>
                    <argument>infile3.txt</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-ext-3-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/resolve-gram-attributes</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-t</argument>
                    <argument>0</argument>
                    <argument>-f</argument>
                    <argument>infile3.txt</argument>
                </arguments>
                <outputFile>outfile3.txt</outputFile>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-ext-4-1</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>sh</executable>
                <arguments>
                    <argument>${basedir}/misc/testhelper2.sh</argument>
                    <argument>${gridshib.home}/bin/test-gram-audit -d -q -Z</argument>
                    <argument>infile4.txt</argument>
                </arguments>
            </configuration>
        </execution>  
        <execution>
            <id>test-gram-audit-ext-4-2</id>
            <goals>
                <goal>exec</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
                <executable>${gridshib.home}/bin/resolve-gram-attributes</executable>
                <arguments>
                    <argument>-d</argument>
                    <argument>-t</argument>
                    <argument>0</argument>
                    <argument>-f</argument>
                    <argument>infile4.txt</argument>
                    <argument>-Z</argument>
                    <argument>-o</argument>
                    <argument>outfile4.txt</argument>
                </arguments>
            </configuration>
        </execution>  
    </executions>
</plugin>
  <plugin>
    <artifactId>maven-clean-plugin</artifactId>
    <version>2.5</version>
    <configuration>
      <filesets>
        <fileset>
          <directory>${gridshib.home}</directory>
        </fileset>
      </filesets>
    </configuration>
  </plugin>
<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-assembly-plugin</artifactId>
  <configuration>
    <descriptor>assembly.xml</descriptor>
    <finalName>${project.artifactId}-${project.version}</finalName>
  </configuration>
  <executions>
    <execution>
      <phase>package</phase>
      <goals>
        <goal>single</goal>
      </goals>
    </execution>
  </executions>
</plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <execution>
            <id>create-javadoc</id>
            <phase>compile</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
          <execution>
            <id>javadoc-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
<!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <executions>
          <execution>
            <id>create-site</id>
            <phase>package</phase>
            <goals>
              <goal>site</goal>
            </goals>
          </execution>
          <execution>
            <id>site-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->
    </plugins>
</build>
</project>
